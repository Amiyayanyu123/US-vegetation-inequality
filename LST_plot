#+++++++++++++++++++++++++
# Function to calculate the mean and the standard deviation
# for each group
#+++++++++++++++++++++++++
# data : a data frame
# varname : the name of a column containing the variable
#to be summariezed
# groupnames : vector of column names to be used as
# grouping variables
data_summary <- function(data, varname, groupnames){
  require(plyr)
  summary_func <- function(x, col){
    c(mean = mean(x[[col]], na.rm=TRUE),
      sd = sd(x[[col]], na.rm=TRUE))
  }
  data_sum<-ddply(data, groupnames, .fun=summary_func,
                  varname)
  data_sum <- rename(data_sum, c("mean" = varname))
  return(data_sum)
}
setwd("D:\\D\\Figures\\LST_JJA_NDVI\\Graph")
Day_delta= read.table("Delta.csv",header=T, na.strings = "NA", sep=",")

ggplot(Day_delta, aes(x=Quantile, y=median, group = Period, color=Period))+ 
  geom_errorbar(aes(ymin=P25, ymax=P75), width=.2,size=1, 
                position=position_dodge(0.3)) +
  geom_line(aes(linetype=Period),position=position_dodge(0.3),size=1) + 
  geom_point(aes(shape=Period),position=position_dodge(0.3),size=3)+
  scale_color_manual(values=c('#FF6E00','#0772B2'))+
  labs(x="\u0394NDVI", y = "\u0394LST (°C)")+scale_y_continuous(breaks = seq(0,3,1))+scale_x_continuous(breaks = seq(0,10,1))+
  theme(axis.title=element_text(size=20,face="bold",color="black"),
        axis.text = element_text(size=18,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=18),
        legend.position="none",
        legend.text = element_text(size=18
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))
#
p <- ggplot(Day_delta, aes(x=Delta_NDVI_quantile,y = Delta_LST_mean))+ 
  geom_errorbar(aes(ymin = Delta_LST_mean-2*Delta_LST_se, ymax = Delta_LST_mean+2*Delta_LST_se), width=.15, 
                position=position_dodge(0.05),color="#FF6E00",size = 0.5) +
  geom_line(linetype="dotted",color="#FF6E00",size = 0.5) + 
  geom_point(shape = 21,size=0.5,fill="#FF6E00",color="#FF6E00")+
  geom_errorbar(data = Night_delta,aes(x=Delta_NDVI_quantile,y = Delta_LST_mean,
      ymin=Delta_LST_mean-2*Delta_LST_se, ymax = Delta_LST_mean+2*Delta_LST_se ), width=.15, 
                position=position_dodge(0.05),size = 0.5,color="#0772B2") +
  geom_line(data = Night_delta,aes(x=Delta_NDVI_quantile,y = Delta_LST_mean),linetype="solid"
            ,color="#0772B2",size = 0.5) + 
  geom_point(data = Night_delta,aes(x=Delta_NDVI_quantile,y = Delta_LST_mean)
             ,shape = 24,size=0.5,fill="#0772B2",color="#0772B2")+
  labs(x="\u0394NDVI", y = "\u0394LST (°C)")+scale_y_continuous(breaks = seq(0,3,1))+scale_x_continuous(breaks = seq(0,10,1))+
  theme(axis.title=element_text(size=20,face="bold",color="black"),
        axis.text = element_text(size=18,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=18),
        legend.position="right",
        legend.text = element_text(size=18
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))

##############################################
setwd("D:\\D\\Figures\\LST_JJA_NDVI\\Graph")
Day_delta= read.table("JJA_LST_NDVI_Z_boxplot.csv",header=T, na.strings = "NA", sep=",")

ggplot(Day_delta, aes(x=Quantile, y=median, group = Period, color=Period))+ 
  geom_errorbar(aes(ymin=P25, ymax=P75), width=.2,size=1, 
                position=position_dodge(0.3)) +
  geom_line(aes(linetype=Period),position=position_dodge(0.3),size=1) + 
  geom_point(aes(shape=Period),position=position_dodge(0.3),size=3)+
   scale_color_manual(values=c('#F68657','#75B19D'))+
  labs(x="\u0394NDVI", y = "Mean LST (°C)")+scale_y_continuous(breaks = seq(30,42,2))+scale_x_continuous(breaks = seq(0,10,1))+
  theme(axis.title=element_text(size=20,face="bold",color="black"),
        axis.text = element_text(size=18,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=18),
        legend.position="none",
        legend.text = element_text(size=18
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))
###############################################
setwd("D:\\D\\Figures\\LST_JJA_NDVI\\Graph")
Day_delta= read.table("JJA_LSTP90_NDVI_Z_boxplot.csv",header=T, na.strings = "NA", sep=",")

ggplot(Day_delta, aes(x=Quantile, y=median, group = Period, color=Period))+ 
  geom_errorbar(aes(ymin=P25, ymax=P75), width=.2,size=1, 
                position=position_dodge(0.3)) +
  geom_line(aes(linetype=Period),position=position_dodge(0.3),size=1) + 
  geom_point(aes(shape=Period),position=position_dodge(0.3),size=3)+
  scale_color_manual(values=c('#F68657','#75B19D'))+
  labs(x="\u0394NDVI", y = " LST P90 (°C)")+scale_y_continuous(breaks = seq(34,46,2))+scale_x_continuous(breaks = seq(0,10,1))+
  theme(axis.title=element_text(size=20,face="bold",color="black"),
        axis.text = element_text(size=18,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=18),
        legend.position="none",
        legend.text = element_text(size=18
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))
###############################################
setwd("D:\\D\\Figures\\LST_JJA_NDVI\\Graph")
Day_delta= read.table("P90_Night_JJA_LST_NDVI_Z_boxplot.csv",header=T, na.strings = "NA", sep=",")

ggplot(Day_delta, aes(x=Quantile, y=median, group = Period, color=Period))+ 
  geom_errorbar(aes(ymin=P25, ymax=P75), width=.2,size=1, 
                position=position_dodge(0.3)) +
  geom_line(aes(linetype=Period),position=position_dodge(0.3),size=1) + 
  geom_point(aes(shape=Period),position=position_dodge(0.3),size=3)+
  scale_color_manual(values=c('#F68657','#75B19D'))+
  labs(x="\u0394NDVI", y = "Night LST P90 (°C)")+scale_y_continuous(breaks = seq(18,28,2))+scale_x_continuous(breaks = seq(0,10,1))+
  theme(axis.title=element_text(size=20,face="bold",color="black"),
        axis.text = element_text(size=18,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=18),
        legend.position="none",
        legend.text = element_text(size=18
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))
##########################################33
#####################################################3
####################################################
library(ggpmisc)
setwd("D:\\D\\Figures\\CE")
CE_Drought= read.table("CE_Drought.csv",header=T, na.strings = "NA", sep=",")
CE_nonDrought= read.table("CE_nonDrought.csv",header=T, na.strings = "NA", sep=",")
climate= read.table("climate.csv",header=T, na.strings = "NA", sep=",")
colnames(climate) = c("ORI","climate","CZ")
size= read.table("City_size.csv",header=T, na.strings = "NA", sep=",")
data_CE = merge(CE_Drought,CE_nonDrought,by.x = "ORI")
data_CE = merge(data_CE,climate)
data_CE = merge(data_CE,size)
data_CE$Slope = data_CE$Slope*(-0.1)
data_CE$Slope_ND = data_CE$Slope_ND*(-0.1)

data_CE$Dif_CE = data_CE$Slope -data_CE$Slope_ND
CE = data_CE %>%
  filter(P < 0.05 & P_ND < 0.05)


ggplot(CE, aes(x=Slope, y=Slope_ND)) +
  geom_point(aes(size=Area))+geom_abline(slope=1, intercept=0)+
  geom_smooth(method = lm,se=T,size = 1.5,color = "red",linetype = "dashed")+ geom_rug()+
  labs(x="CE Drought", y = "CE Non-drought")+
  stat_poly_eq(formula = y~x, 
               aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")), 
               parse = TRUE)+
  scale_size_continuous(range = c(0.5, 5))+
  theme(axis.title=element_text(size=20,face="bold",color="black"),
        axis.text = element_text(size=18,face="plain",color="black"),
        panel.background=element_rect(colour="black",fill=NA),
        panel.grid.minor=element_blank(),
        text=element_text(size=18),
        legend.position="bottom",
        legend.text = element_text(size=18
        ),legend.background=element_rect(colour=NA,fill=NA),
        axis.ticks=element_line(colour="black"))


data_CE$Dif_CE = data_CE$Slope -data_CE$Slope_ND
wilcox.test(data_CE$Slope,data_CE$Slope_ND)
box_data = as.data.frame(cbind(CE$Slope,CE$Slope_ND))
colnames(box_data) = c("D","ND")
box_dt = reshape::melt(box_data)

ggplot(data = box_dt,aes(x = variable,y=value,fill = variable))+
  geom_boxplot(size = 0.5) + theme_classic()+
labs(x=" ", y = "CE (°C)")+scale_fill_manual(values=c('#F68657','#75B19D'))+
 theme(axis.text = element_text(face="plain",color="black", size=18),
       axis.title=element_text(size=20,face="bold",color="black") ,
       legend.position="none")
###############################
box_data_CZ = as.data.frame(cbind(CE$Dif_CE,CE$CZ))
colnames(box_data_CZ) = c("Dif","CZ")
box_data_CZ$Dif = as.numeric(box_data_CZ$Dif)
box_CZ = box_data_CZ%>%
  group_by(CZ) %>%
  summarize(mean = mean(Dif),
            se = stderr(Dif)
  )

ggplot(data = box_data_CZ,aes(x = CZ,y=Dif))+
  geom_boxplot(size = 0.5) + theme_classic()+
  labs(x=" ", y = "\u0394CE (°C)")+scale_fill_manual(values=c('#F68657','#75B19D'))+
  theme(axis.text = element_text(face="plain",color="black", size=18),
        axis.title=element_text(size=20,face="bold",color="black") ,
        legend.position="none")
########################
box_data_Area = as.data.frame(cbind(CE$Dif_CE,CE$Area))
colnames(box_data_Area) = c("Dif","Area")
ApplyQuintiles <- function(x) {
  cut(x, breaks=c(quantile(box_data_Area$Area, probs = seq(0, 1, by = 0.25))), 
      labels=c("D1","D2","D3","D4"), include.lowest=TRUE)
}
box_data_Area$Area <- sapply(box_data_Area$Area, ApplyQuintiles)

ggplot(data = box_data_Area,aes(x = Area,y=Dif))+
  geom_boxplot(size = 0.5) + theme_classic()+
  labs(x=" ", y = "\u0394CE (°C)")+scale_fill_manual(values=c('#F68657','#75B19D'))+
  theme(axis.text = element_text(face="plain",color="black", size=18),
        axis.title=element_text(size=20,face="bold",color="black") ,
        legend.position="none")
##########3
